(def constant BV_VISIBILITY_PREF_NAME 'buildViewer_showBuildViewer')
(def constant BV_SCALE_PREF_NAME 'buildViewer_scale')
(def constant BV_SCALE_PREF_DESC 'Viewer Scale')
(def constant BV_SCALE_PREF {
	MULTIPLIER: 5,
	STEPS: 20
})
(def constant BV_ELEMENT_SIZE {
	WIDTH: 20,
	HEIGHT: 100
})
(def constant BV_ELEMENT_NAME 'buildViewer')

(def element BuildViewer () layout=true
	(scope
		#stage
		(macro STAGE_SIZE)
		#camera and data component
		(var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
		(var dataComponent:gfx = "cameraEntity.data" (event "cameraEntity.evAdded") (event "cameraEntity.evRemoved"))
		(var data:dict = "dataComponent ? dataComponent.data : {}" (event "dataComponent.evChanged"))
		#userpref/show/hide
		(event evVisibilityButtonClicked)
		(var userPrefsComponent:gfx = "$datahub.getSingleComponent(CC.userPrefs)")
		(var userPrefs:gfx = "userPrefsComponent.userPrefs" (event "userPrefsComponent.evUserPrefsChanged"))
		(var userPrefsBool:dict = "userPrefs.elementsGroupExpand")
		(var userPrefsNum:dict = "userPrefs.chatBoxWidth")
		(var viewersVisibility:bool = "BV_VISIBILITY_PREF_NAME in userPrefsBool ? userPrefsBool[BV_VISIBILITY_PREF_NAME] : false" watch=false)
		(bind viewersVisibility "$event.value" watch=false init=false (event "evVisibilityButtonClicked"))
		(bindcall externalCall 'inputMapping.onAction' "['setUserPref', {'value': $event.value, 'name': 'elementsGroupExpand', 'subName': BV_VISIBILITY_PREF_NAME}]" init=false watch=false (event "evVisibilityButtonClicked"))
		(macro SIMPLE_MOUSE_OVER_DOWN_SELECTED_COLORTRANSFORM_SCOPE)
		(var arrowDirection:str = "viewersVisibility ? 'left' : 'right'")
		#scale
		(var scalePref:number = "BV_SCALE_PREF_NAME in userPrefsNum ? round(userPrefsNum[BV_SCALE_PREF_NAME]) : 10.00")
		(var scale:number = "((scalePref - BV_SCALE_PREF.STEPS/2) * BV_SCALE_PREF.MULTIPLIER) / 100 + 1.00")
		#drag/drop
		(var defaultPos:dict = "{'positionX': 290, 'positionY': (stageHeight - 400)}")
		(macro DRAGGABLE_GET_DROP_POSITION _wndName="BV_ELEMENT_NAME" _defaults="defaultPos")
	)

	(element BV_OptionButton
		(style
			(position = "absolute")
			(bind top "dragPosY - 27")
			(bind left "dragPosX")
		)
	)
	(hblock
		(style
			(position = "absolute")
			(bind left "dragPosX")
			(bind top "dragPosY")
			(bind scaleX "scale")
			(bind scaleY "scale")
		)
		#show/hide button
		(block
			(element ModDraggableElement _wndName="BV_ELEMENT_NAME" _defaults="defaultPos" _elmSize="{width: BV_ELEMENT_SIZE.WIDTH + 10, height: BV_ELEMENT_SIZE.HEIGHT}")
			(block
				(dispatch evVisibilityButtonClicked args="{value: !viewersVisibility}" on='click')
				(macro SIMPLE_MOUSE_OVER_DOWN_SELECTED_COLORTRANSFORM "true")
				(block
					(style
						(width = "BV_ELEMENT_SIZE.WIDTH")
						(height = 31)
						(bind backgroundImage "'url:../service_kit/buttons/arrow_' + arrowDirection + '_down.png'")
					)
				)
				(style
					(align = "center|middle")
					(marginRight = 5)
					(marginLeft = 5)
					(width = "BV_ELEMENT_SIZE.WIDTH")
					(height = "BV_ELEMENT_SIZE.HEIGHT")
				)
			)
		)
		#viewers
		(block
			(style
				(width = "400")
				(align = "center|middle")
			)
			(bind visible "viewersVisibility && data")

			(macro BV_ContrastPanel)
			(element BV_NameElement "data.vehicleId")
			(macro BV_HorizontalDevider)
			(element BV_SkillsElement "data.skills")
			(macro BV_HorizontalDevider)
			(element BV_ModernizationElement "data.modernizations")
		)
	)
)

(def element BV_NameElement(vehicleId:number) layout=true
	(scope
		#player name
		(var avatar:gfx = "$datahub.getPrimaryEntity(CC.vehicleInfo, vehicleId).avatar")
		(var shipName:str = "avatar ? avatar.ship.ref.ship.nameUpper : ''")
		(var shipType:str = "avatar ? avatar.ship.ref.ship.subtype : ''")
		(var avatarName:str = "avatar ? avatar.name : ''")
	)
	(hblock
		(element BV_NameTextItem "avatarName")
		(element ShipIcon "shipType")
		(element BV_NameTextItem "shipName")
	)
	(style
		(padding = [6, 5, 6, 0])
	)
)

(def element BV_NameTextItem(value:str) layout=true
	(style
		(margin = [6, 6, 6, 6])
	)
	(tf
		(class $TextDefaultBold17NM)
		(bind text "value")
	)
)

(def element BV_ModernizationElement(modernizations:array) layout=true
	(hblock
		(controller $Repeat renderer='BV_ModernizationIconItem' layout=true
			(bind count "modernizations.length")
			(args "modernizations[$index]")
			#may have to convert index to str
		)
		(style
			(padding = [6, 6, 6, 6])
		)
	)
)

(def element BV_ModernizationIconItem(modernization:dict) layout=true
	(scope
		(var isInstalled:bool = "modernization ? true : false")
		(var iconPath:str = "isInstalled ? modernization.iconPath : 'url:../service_kit/frames/64px_not_empty_field.png'")
	)

	(style
		(width = 60px)
		(height = 60px)
		(margin = [2, 2, 2, 2])
	)

	(block
		(block
			#modernization icon
			(style
				(width = 60px)
				(height = 60px)
				(bind backgroundImage "iconPath")
				(backgroundSize = "fill")
			)
		)
	)
)

(def element BV_SkillsElement(skills:array) layout = true
	#crew skills
	(block
		(controller $Repeat renderer='BV_SkillsRowItem' layout=true
			(bind count "skills.length")
			(args "skills[$index]")
		)
		(style
			(padding = [6, 6, 6, 6])
		)
	)
)

(def element BV_SkillsRowItem(crewSkillRow:array) layout=true
	#skill row
	(hblock
		(controller $Repeat renderer='BV_SkillIconItem' layout=true
			(bind count "crewSkillRow.length")
			(args "crewSkillRow[$index]")
		)
	)
)

(def element BV_SkillIconItem(skill:dict) layout=true
	(scope
		(var isEpic:bool = "skill.isEpic")
		(var isLearned:bool = "skill.isLearned")
		(var iconPath:str = "skill.iconPath")
		#(var transform:dict = "isLearned ? {} : {redMultiplier: 0, greenMultiplier: 0, blueMultiplier: 0, redOffset: 130, greenOffset: 130, blueOffset: 130}")
		(var transform:dict = "isLearned ? {redOffset:0,greenOffset:-41,blueOffset:-153} : {redOffset: -100, greenOffset: -100, blueOffset: -100}")
	)

	(style
		(width = 60px)
		(height = 60px)
		(margin = [2, 2, 2, 2])
	)

	(block
		#skill icon
		(block
			(style
				(bind backgroundImage "iconPath")
			)
			(bind colorTransform "transform")
		)
		#epic icon
		(block
			(style
				(backgroundImage = "'url:../service_kit/item_types/icon_modernization_special.png'")
			)
			(bind visible "isEpic")
		)
	)
)

(def macro BV_HorizontalDevider() layout=true
	(element HorizontalDivider
		(style
			(paddingLeft = 10)
			(paddingRight = 10)
			(alpha = 2)
		)
	)
)

(def macro BV_ContrastPanel() layout=true
	(mc contrast_panel
		(class $FullsizeAbsolute)
		(style
			(alpha = "0.4")
			(hitTest = false)
		)
	)
)

(def element BV_SizeSliderItem () layout=true
	(scope
		(event evSliderValueChanged) #slider event
		(var userPrefsComponent:gfx = "$datahub.getSingleComponent(CC.userPrefs)")
		(var userPrefsNum:dict = "userPrefsComponent.userPrefs.chatBoxWidth" (event "userPrefsComponent.evUserPrefsChanged"))
		(var elementScale:number = "BV_SCALE_PREF_NAME in userPrefsNum ? round(userPrefsNum[BV_SCALE_PREF_NAME]) : 10.00")
		(var displayedScale:number = "((elementScale - BV_SCALE_PREF.STEPS/2) * BV_SCALE_PREF.MULTIPLIER) + 100")
	)

	(bindcall externalCall 'inputMapping.onAction' "['setUserPref', {'value': $event.value + 0.00001, 'name': 'chatBoxWidth', 'subName': BV_SCALE_PREF_NAME}]" init=false watch=false (event "evSliderValueChanged"))

	(block
		(style
			(width = "200px")
			(align = "center")
		)

		(mc contrast_panel
			(class $FullsizeAbsolute)
			(style
				(alpha = "0.8")
				(hitTest = false)
			)
		)

		(tf
			(class $TextDefault)
			(alpha = "TA")
			(bind text "BV_SCALE_PREF_DESC")
			(style
				(width = 90%)
				(marginTop = 5px)
			)
		)
		(hblock
			(style
				(align = "center|middle")
				(marginBottom = 5px)
				(marginLeft = 8px)
			)
			(element DefaultSlider
				_value = "elementScale"
				_intervalsCount = "BV_SCALE_PREF.STEPS"
				_unitsInStepInterval = "1"
				_width = 140
			)
			(tf
				(class $TextDefault)
				(alpha = "TA")
				(bind text "displayedScale")
				(style
					(marginLeft = 5px)
					(width = 30px)
				)
			)
			(tf
				(class $TextDefault)
				(alpha = "TC")
				(text = "'%'")
				(style
					(marginLeft = -7px)
				)
			)
		)
	)
)

(def element BV_OptionButton () layout=true
	(scope
		(event evHideInfotip)
		(event evOnButtonClicked)

		(var mouse:gfx = "$datahub.getSingleComponent(CC.mouse)")
		(var isMouseActive:bool = "mouse.active" (event "mouse.evActiveChanged"))

		(var infotipVisible:bool = false)
	)
	(dispatch evHideInfotip args="{}" (bind trigger "isMouseActive"))

	(controller $Tooltip
		(renderer='BV_SizeSliderItem')
		(bindcall show animation={duration:0.1, easing:"Easing.cubic_in", from:{alpha:1}, to:{alpha:1}} (event "evOnButtonClicked"))
		(bindcall hide animation={duration:0.1, easing:"Easing.cubic_out", from:{alpha:1}, to:{alpha:0}} on='evClickOutside' (event "evHideInfotip"))
		(bind infotipVisible "true" init=false on='evShow')
		(bind infotipVisible "false" init=false on='evHide')
		(priority=1)
		(macro MINIMAP_TOOLTIP_COMMON_PARAMS)
	)
	
	(element ButtonSettingsSmall
		(bind visible "isMouseActive")
		(style
			(position = "absolute")
			(left = "4px")
			(top = "3px")
		)
	)
)